import streamlit as st
import requests

# Configura√ß√£o da P√°gina
st.set_page_config(page_title="M√©todo Babi - Monitoramento IA", layout="wide")

# Carregar chave da API do Streamlit Secrets
API_KEY = st.secrets["perplexity"]["API_KEY"]
HEADERS = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}

# Inicializar sess√£o de hist√≥rico
if "messages" not in st.session_state:
    st.session_state.messages = []

# Criar Tabs de Navega√ß√£o
tabs = st.tabs(["Configura√ß√£o + Fontes", "Dashboard", "Data Lab", "Decision Make"])

# 1Ô∏è‚É£ Configura√ß√£o + Fontes
with tabs[0]:
    st.header("üîß Configura√ß√£o e Fontes de Dados")
    st.write("Defina palavras-chave e fontes de coleta de dados para o monitoramento.")
    
    keywords = st.text_area("Palavras-chave para monitoramento", "intelig√™ncia artificial, mercado, inova√ß√£o")
    if st.button("Salvar Configura√ß√£o"):
        st.session_state.keywords = keywords
        st.success("Configura√ß√£o salva com sucesso!")

# 2Ô∏è‚É£ Dashboard
with tabs[1]:
    st.header("üìä Dashboard - Monitoramento de Not√≠cias")
    st.write("Visualiza√ß√£o das √∫ltimas not√≠cias categorizadas pela IA.")
    
    # Simula√ß√£o de not√≠cias categorizadas
    example_news = [
        {"Data": "2025-02-05", "Link": "https://noticia1.com", "Relev√¢ncia": "Bomba", "Resumo": "Nova tend√™ncia no mercado AI!",
         "Fortalezas": "Alto impacto", "Fraquezas": "Alto risco", "P√∫blico-alvo": "Empresas de tecnologia", "Colabora√ß√£o": "Nenhuma", "Per√≠odo da A√ß√£o": "Q1 2025"},
        {"Data": "2025-02-04", "Link": "https://noticia2.com", "Relev√¢ncia": "BAU", "Resumo": "Concorrente lan√ßou novo produto.",
         "Fortalezas": "Inova√ß√£o incremental", "Fraquezas": "Pouca ado√ß√£o inicial", "P√∫blico-alvo": "Startups", "Colabora√ß√£o": "Parceria com X", "Per√≠odo da A√ß√£o": "Q2 2025"}
    ]
    st.table(example_news)

# 3Ô∏è‚É£ Data Lab (Integra√ß√£o com Perplexity API)
with tabs[2]:
    st.header("üî¨ Data Lab - An√°lise Sem√¢ntica e IA")
    st.write("An√°lise sem√¢ntica com InfraNodus e respostas da API Perplexity.")

    user_input = st.chat_input("Pergunte sobre as tend√™ncias do mercado...")

    if user_input:
        st.session_state.messages.append({"role": "user", "content": user_input})
        
        # Exibir input do usu√°rio
        with st.chat_message("user"):
            st.markdown(user_input)
        
        # Enviar para a API da Perplexity
        payload = {
            "model": "sonar-reasoning-pro",
            "messages": st.session_state.messages
        }
        
        response = requests.post("https://api.perplexity.ai/chat/completions", headers=HEADERS, json=payload)

        if response.status_code == 200:
            response_data = response.json()
            reply = response_data["choices"][0]["message"]["content"]
            sources = response_data.get("sources", [])  # Obt√©m as fontes

            st.session_state.messages.append({"role": "assistant", "content": reply})

            # Melhor apresenta√ß√£o da resposta
            with st.expander("üí° **Resposta da Perplexity**"):
                st.markdown(f"**üîπ Resumo:** {reply}")

            # Exibi√ß√£o de Fontes clic√°veis
            if sources:
                st.markdown("### üîó **Fontes da Resposta:**")
                for i, source in enumerate(sources):
                    st.markdown(f"- [{source['title']}]({source['url']})")  # Fonte Clic√°vel
            else:
                st.markdown("üîç **Nenhuma fonte foi encontrada para esta resposta.**")
        else:
            st.error(f"‚ùå Erro na API Perplexity: {response.json()}")

# 4Ô∏è‚É£ Decision Make
with tabs[3]:
    st.header("ü§ñ Decision Make - Tomada de Decis√£o Automatizada")
    st.write("IA ajuda a decidir pr√≥ximos passos estrat√©gicos.")
    
    options = ["Ajustar Campanha", "Explorar Novos Mercados", "Melhorar Produto"]
    decision = st.selectbox("Qual a√ß√£o tomar?", options)

    if st.button("Confirmar A√ß√£o"):
        st.success(f"A√ß√£o '{decision}' registrada com sucesso!")

